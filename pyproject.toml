
[project]
authors = [
    {name = "Teemu Risikko", email = "teemu.risikko@gmail.com"},
]
requires-python = "<4.0,>=3.12"
dependencies = [
    "requests<3.0.0,>=2.28.2",
    "python-dotenv<2.0.0,>=1.0.0",
    "pandas<3.0.0,>=2.2.3",
    "flask<3.0.0,>=2.2.3",
    "flask-cors<4.0.0,>=3.0.10",
    "gunicorn<21.0.0,>=20.1.0",
    "redis<5.0.0,>=4.5.4",
    "pyarrow<18.0.0,>=17.0.0",
    "aiohttp<4.0.0,>=3.8.4",
    "async-lru<3.0.0,>=2.0.4",
    "polars<2.0.0,>=1.12.0",
    "fast-json-normalize<1.0.0,>=0.0.9",
    "scikit-learn<2.0.0,>=1.5.2",
]
name = "animeippo"
version = "0.1.0"
description = ""
readme = "README.md"

[dependency-groups]
dev = [
    "ipykernel<7.0.0,>=6.21.3",
    "requests-mock<2.0.0,>=1.10.0",
    "ruff<1.0.0,>=0.1.13",
    "pytest<8.0.0,>=7.2.2",
    "bandit<2.0.0,>=1.7.5",
    "pytest-dotenv<1.0.0,>=0.5.2",
    "coverage<8.0.0,>=7.2.2",
    "pytest-mock<4.0.0,>=3.10.0",
    "matplotlib<4.0.0,>=3.7.1",
    "gprof2dot<2023.0.0,>=2022.7.29",
    "profilehooks<2.0.0,>=1.12.0",
    "pytest-asyncio<1.0.0,>=0.21.0",
    "pydeps<2.0.0,>=1.12.8",
    "seaborn<1.0.0,>=0.13.0",
]
extras = [
    "xlsxwriter<4.0.0,>=3.1.9",
    "cohesion<2.0.0,>=1.1.0",
]

[tool.setuptools]
packages = ["animeippo"]

[tool.bandit]
exclude_dirs = [".venv"]

[tool.bandit.assert_used]
skips = ['*/test_*.py'] # Pytest uses asserts

[tool.coverage.run]
source = ["animeippo"]
branch = true
command_line = "-m pytest tests"
data_file = ".coverage"
omit = ["animeippo/util/**"]

[tool.coverage.report]
fail_under = 100
skip_empty = true
skip_covered = true
sort = "-Cover"
show_missing = true
exclude_lines = [
  # Don't complain if non-runnable code isn't run:
  "if __name__ == .__main__.:",
]
omit = ["animeippo/__main__.py"]

[tool.pytest.ini_options]
filterwarnings = [
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning:.*",
  "ignore:Deprecated call to `pkg_resources.declare_namespace.*:DeprecationWarning:.*",
  "ignore:datetime.*:DeprecationWarning:dateutil.*",
]
env_files = ["conf/prod.env"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
  "F",
  "E",
  "I",
  "S",
  "C",
  "B",
  "A",
  "RUF",
  "PL",
]

exclude = [
  ".git",
  ".venv",
  ".ruff_cache",
  ".devcontainer",
  "__pycache__",
  ".pytest_cache",
  ".github",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004"]


[tool.pydeps]
max-bacon = 0
verbose = true
exclude = ["flask*"]
